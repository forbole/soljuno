type Query {
    actions_epoch_info: EpochInfo!
    actions_epoch_schedule: EpochSchedule!
    actions_inflation_rate: InflationRate!
    actions_inflation_governor: InflationGovernor!
    actions_tx(hash: String!): Tx!
    actions_txs_by_address(address: String!, config: TxsByAddressConfig): [TxMeta!]!
    actions_account_info(address: String!): AccountInfo!
}

# ----------------------------------------------------------------

type EpochInfo {
    absolute_slot: bigint!
    block_height: bigint!
    epoch: bigint!
    slot_index: bigint!
    slots_in_epoch: bigint!
    transaction_count: bigint!
}

type EpochSchedule {
    slots_per_epoch: Int!
    first_normal_epoch: Int!
    first_normal_slot: Int!
    leader_schedule_slot_offset: Int!
    warmup: Boolean!
}

type InflationRate {
    epoch: bigint!
    total: Float!
    foundation: Float!
    validator: Float!
}

type InflationGovernor {
    initial: Float!
    terminal: Float!
    taper: Float!
    foundation: Float!
    foundation_term: Float!
}

# ----------------------------------------------------------------

scalar Message

type Tx {
    hash: String!
    slot: bigint!
    error: Boolean!
    fee: bigint!
    logs: [String!]!
    accounts: [String!]!
    messages: [Message!]!
}

type TxMeta {
    slot: bigint!
    block_time: bigint!
    hash: String!
    error: Boolean!
    memo: String!
}

input TxsByAddressConfig {
    limit: Int
    before: String
    until: String
}

# ----------------------------------------------------------------

scalar ParsedAccount

type AccountInfo {
    data: [String!]!
    executable: Boolean!
    lamports: bigint!
    program_owner: String!
    rent_epoch: Int!
    parsed: ParsedAccount

}