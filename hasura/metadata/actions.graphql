type Query {
    epochInfo: EpochInfo!
    epochScheduleParam: EpochSchedule!
    inflationRate: InflationRate!
    inflationGovernorParam: InflationGovernor!
    tx(hash: String!): Tx!
    txs_by_address(address: String!, config: TxByAddressConfig): [TxMeta!]!
}

# ----------------------------------------------------------------

type EpochInfo {
    absoluteSlot: bigint!
    blockHeight: bigint!
    epoch: bigint!
    slotIndex: bigint!
    slotsInEpoch: bigint!
    transactionCount: bigint!
}

type EpochSchedule {
    slotsPerEpoch: Int!
    firstNormalEpoch: Int!
    firstNormalSlot: Int!
    leaderScheduleSlotOffset: Int!
    warmup: Boolean!
}

type InflationRate {
    epoch: bigint!
    total: Float!
    foundation: Float!
    validator: Float!
}

type InflationGovernor {
    initial: Float!
    terminal: Float!
    taper: Float!
    foundation: Float!
    foundationTerm: Float!
}

# ----------------------------------------------------------------

scalar Message

type Tx {
    hash: String!
    slot: bigint!
    error: Boolean!
    fee: bigint!
    logs: [String!]!
    accounts: [String!]!
    messages: [Message!]!
}

type TxMeta {
    slot: bigint!
    block_time: bigint!
    hash: String!
    error: Boolean!
    memo: String!
}

input TxByAddressConfig {
    limit: Int
    before: String
    until: String
}

# ----------------------------------------------------------------

scalar ParsedAccount

type AccountInfo {
    data: [String!]!
    executable: Boolean!
    lamports: bigint!
    program_owner: String!
    rent_epoch: Int!
    parsed: ParsedAccount
}